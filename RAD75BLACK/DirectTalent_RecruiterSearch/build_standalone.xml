<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     October 1, 2007 9:22:17 AM                                                        

     DirectTalent_Search20
     DirectTalent Search 2.0 components
     This build file is used to build in a standalone (non-RAD) ANT environment, 
     it MUST be called from build.xml
                   
     dcook                                                                
     ====================================================================== -->

<project name="DirectTalent_Search20" default="all" basedir=".">
	<description>
		DirectTalent portlet components
	</description>

	<property file="build.properties" />
	
	<property name="dir.classes" location="${dir.build}/classes" />

	<!-- init -->
	<target name="init" depends="clean">
		<tstamp>
			<format property="buildtime" pattern="yyyy-MM-dd'T'HH:mm:ss" />
		</tstamp>
		<mkdir dir="${dir.classes}" />
		<mkdir dir="${dir.dist}" />
	</target>

	<!-- compile -->
	<target name="compile" depends="init">
		<javac debug="true" srcdir="${dir.src}" deprecation="true" optimize="true" destdir="${dir.build}/classes">
			<classpath refid="classpath.compile" />
		</javac>
	</target>

	<!-- archive -->
	<target name="archive" depends="compile">
		<manifest file="${dir.build}/MANIFEST.MF">
			<attribute name="Built-By" value="${user.name}" />
			<attribute name="Built-On" value="${DSTAMP}:${TSTAMP}"/>
			<!-- <attribute name="Class-Path" value="" /> -->
		</manifest>
		<war destfile="${dist}/${project.jar}" index="true" manifest="${dir.build}/MANIFEST.MF" basedir="${dir.build}/classes" webxml='WEB-INF/web.xml'/>
	</target>

	<!-- test -->
	<target name="test-init" depends="init">

	</target>

	<target name="test-compile" depends="test-init,compile">
		<javac classpathref="classpath.test" debug="true" destdir="${dir.test}" includeantruntime="true" srcdir="${dir.test.src}" />
	</target>

	<target name="test" depends="test-compile">
		<junit printsummary="false" errorProperty="test.failed" failureProperty="test.failed">
			<classpath refid="classpath.test" />
			<formatter type="brief" usefile="false" />
			<formatter type="xml" />
<!--			<test todir="${dir.test.data}" name="${test}" /> -->
			<batchtest todir="${dir.test.data}">
				<fileset dir="${dir.test}" includes="**/${test}" />
			</batchtest>
		</junit>
		<junitreport todir="${dir.test.data}">
			<fileset dir="${dir.test.data}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${dir.test.report}" />
		</junitreport>
		<fail message="Tests failed.  Check log and/or reports." if="test.failed" />
	</target>

	<!-- javadoc -->
	<target name="javadoc-init" description="Initialize project documentation" >
        	<mkdir dir="${dir.javadoc}"/>
	</target>
    
	<target name="javadoc" depends="javadoc-init" description="Run javadoc" >
        	<javadoc author="true" destdir="${dir.javadoc}" packagenames="${javadoc.packages}" protected="false" public="false" sourcepath="${dir.src}" use="true" version="true" windowtitle="${project.name}">
            		<classpath refid="classpath.compile"/>
        	</javadoc>
	</target>
	
	<!-- clean build and distribution directories -->
	<target name="clean">
		<delete dir="${dir.build}" />
	</target>

	<!-- classpaths for compilation and testing -->
	<path id="classpath.compile">
		<!-- <pathelement location="../SomeProjectEJB/bin"/> -->
		<fileset dir="${dir.utility}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${dir.was}/lib/">
			<include  name="j2ee.jar"/>
		</fileset>
		<fileset dir="${dir.apache}/commons-beanutils-1.7.0/">
			<include  name="commons-beanutils.jar"/>
		</fileset>
		<fileset dir="${dir.apache}/commons-codec-1.3/">
			<include  name="commons-codec-1.3.jar"/>
		</fileset>
		<fileset dir="${dir.apache}/commons-collections-3.2/">
			<include  name="commons-collections-3.2.jar"/>
		</fileset>
		<fileset dir="${dir.apache}/commons-configuration-1.4/">
			<include  name="commons-configuration-1.4.jar"/>
		</fileset>
		<fileset dir="${dir.apache}/commons-digester-1.8/">
			<include  name="commons-digester-1.7.jar"/>
		</fileset>
		<fileset dir="${dir.apache}/commons-lang-2.3/">
			<include  name="commons-lang-2.3.jar"/>
		</fileset>
		<fileset dir="${dir.apache}/commons-logging-1.0.4/">
			<include  name="commons-logging.jar"/>
		</fileset>
	</path>

	<path id="classpath.test">
		<pathelement location="${dir.classes}" />
		<path refid="classpath.compile" />
		<pathelement path="${jar.junit}" />
		
		<pathelement location="${dir.test}" />
		<!--
		<fileset dir="${dir.utilities.lib}">
			<include name="**/*.jar" />
		</fileset>
		-->
	</path>
	
	<target name="all" depends="clean, test, archive, javadoc" />

</project>